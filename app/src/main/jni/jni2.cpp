//
// Created by Lu on 2016/12/20.
//

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <stdio.h>
#include <jni.h>
#include <sys/types.h>
#include <unistd.h>
/* Header for class com_example_lu_jnirecorder_MainActivity */

#ifndef _Included_com_example_lu_jnirecorder_MainActivity
#define _Included_com_example_lu_jnirecorder_MainActivity
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_example_lu_jnirecorder_MainActivity
 * Method:    rejnistart
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_example_lu_jnirecorder_MainActivity_rejnistart
        (JNIEnv *env, jobject jobject1){
    jclass recclazz = env->FindClass("android/media/MediaRecorder");
    jstring result;

    jmethodID recordInit = env->GetMethodID(recclazz, "<init>", "()V");

    jobject obj = env->NewObject(recclazz, recordInit);


    jstring filename = env->NewStringUTF("/mnt/sdcard/recordertestlu.WMA");
    jmethodID setAudioSourceID =env->GetMethodID(recclazz,"setAudioSource","(I)V");
    jmethodID setOutputFormatID =env->GetMethodID(recclazz,"setOutputFormat","(I)V");
    jmethodID setOutputFileID =env->GetMethodID(recclazz,"setOutputFile","(Ljava/lang/String;)V");
    jmethodID setAudioEncoderID =env->GetMethodID(recclazz,"setAudioEncoder","(I)V");
    jmethodID prepareID =env->GetMethodID(recclazz,"prepare","()V");
    jmethodID startID =env->GetMethodID(recclazz,"start","()V");


    env->CallVoidMethod(obj,setAudioSourceID,1);
    env->CallVoidMethod(obj,setOutputFormatID,0);
    env->CallVoidMethod(obj,setOutputFileID,filename);
    env->CallVoidMethod(obj,setAudioEncoderID,0);
    env->CallVoidMethod(obj,prepareID);
    env->CallVoidMethod(obj,startID);


    result = env->NewStringUTF("recorder succeed");
    sleep(5);
    jmethodID stoprec =env->GetMethodID(recclazz,"stop","()V");
    jmethodID releaserec =env->GetMethodID(recclazz,"release","()V");



    //if (stoprec)
    //{
        env->CallVoidMethod(obj,stoprec);
        env->CallVoidMethod(obj,releaserec);
    //}else{
    //result = env->NewStringUTF("stop failed");
    //}

    result = env->NewStringUTF("stop succeed");
    return  result;
}


/*JNIEXPORT jstring JNICALL Java_com_example_lu_jnirecorder_MainActivity_rejnistop
       (JNIEnv *env, jobject jobject2){

   /*
   jstring result;



   jmethodID stoprec =env->GetMethodID(recclazz,"stop","()V");
   jmethodID releaserec =env->GetMethodID(recclazz,"release","()V");



   if (stoprec)
   {
       env->CallVoidMethod(obj,stoprec);
       env->CallVoidMethod(obj,releaserec);
   }else{
       result = env->NewStringUTF("stop failed");
   }

   result = env->NewStringUTF("stop succeed");
   return result;


}*/


#ifdef __cplusplus
}
#endif
#endif
